# Default values for k8s-mediaserver.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

general:
  ingress_host: 192.168.1.214.sslip.io
  plex_ingress_host: 192.168.1.214.sslip.io
  jellyfin_ingress_host: jellyfin.7kgang.org
  jellyseerr_ingress_host: jellyseerr.7kgang.org
  image_tag: latest
  podDistribution: cluster
  puid: 1000
  # GID to run the process with
  pgid: 1000
  # Persistent storage selections and pathing
  storage:
    customVolume: false # set to true if not using a PVC (must provide volume below)
    pvcName: mediaserver-pvc
    accessMode: ""
    size: 5Gi
    pvcStorageClass: ""
    # the path starting from the top level of the pv you're passing. If your share is server.local/share/, then tv is server.local/share/media/tv
    subPaths:
      tv: media/tv
      movies: media/movies
      audiobooks: media/audiobooks
      books: media/books
      downloads: downloads
      transmission: transmission
      sabnzbd: sabnzbd
      config: config
    volumes:
      nfs:
        server: { 192.168.1.116 }
        path: /mediaserver
  ingress:
    ingressClassName: "internet-nginx "
  nodeSelector: {}

sonarr:
  enabled: true
  container:
    image: docker.io/linuxserver/sonarr
    nodeSelector: {}
    port: 8989
  service:
    type: ClusterIP
    port: 8989
    nodePort:
    extraLBService: false
    extraLBAnnotations:
        metallb.universe.tf/allow-shared-ip: "mediaserver-ip-key"
    # Defines an additional LB service, requires cloud provider service or MetalLB
  ingress:
    enabled: true
    annotations: {}
    path: /sonarr
    tls:
      enabled: false
      secretName: ""
  resources: {}
  volume: {}
  # name: pvc-sonarr-config
  # storageClassName: longhorn
  # annotations:
  #   my-annotation/test: my-value
  # labels:
  #   my-label/test: my-other-value
  # accessModes: ReadWriteOnce
  # storage: 5Gi
  # selector: {}

radarr:
  enabled: true
  container:
    image: docker.io/linuxserver/radarr
    nodeSelector: {}
    port: 7878
  service:
    type: ClusterIP
    port: 7878
    nodePort:
    # Defines an additional LB service, requires cloud provider service or MetalLB
    extraLBService: false
    extraLBAnnotations:
        metallb.universe.tf/allow-shared-ip: "mediaserver-ip-key"

  ingress:
    enabled: true
    annotations: {}
    path: /radarr
    tls:
      enabled: false
      secretName: ""
  resources: {}
  volume: {}
  # name: pvc-radarr-config
  # storageClassName: longhorn
  # annotations: {}
  # labels: {}
  # accessModes: ReadWriteOnce
  # storage: 5Gi
  # selector: {}

jackett:
  enabled: false
  container:
    image: docker.io/linuxserver/jackett
    nodeSelector: {}
    port: 9117
  service:
    type: ClusterIP
    port: 9117
    nodePort:
    extraLBService: false
    extraLBAnnotations: {}
    # Defines an additional LB service, requires cloud provider service or MetalLB
  ingress:
    enabled: true
    annotations: {}
    path: /jackett
    tls:
      enabled: false
      secretName: ""
  resources: {}
  volume: {}
   # name: pvc-jackett-config
   # storageClassName: longhorn
   # annotations: {}
   # labels: {}
   # accessModes: ReadWriteOnce
   # storage: 5Gi
   # selector: {}

transmission:
  enabled: true
  container:
    image: docker.io/linuxserver/transmission
    nodeSelector: {}
    port:
      utp: 9091
      peer: 51413
  service:
    utp:
      type: ClusterIP
      port: 9091
      # if type is NodePort, nodePort must be set
      nodePort:
      # Defines an additional LB service, requires cloud provider service or MetalLB
      extraLBService: false
      extraLBAnnotations: {}
    peer:
      type: ClusterIP
      port: 51413
      # if type is NodePort, nodePort and nodePortUDP must be set
      nodePort:
      nodePortUDP:
      # Defines an additional LB service, requires cloud provider service or MetalLB
      extraLBService: true
      extraLBAnnotations:
        metallb.universe.tf/allow-shared-ip: "mediaserver-ip-key"
  ingress:
    enabled: true
    annotations: {}
    path: /transmission
    tls:
      enabled: false
      secretName: ""
  config:
    auth:
      enabled: false
      username: ""
      password: ""
  resources: {}
  volume:
    name: pvc-transmission-config
    storageClassName: longhorn
    annotations: {}
    labels: {}
    accessModes: ReadWriteOnce
    storage: 5Gi
    selector: {}

sabnzbd:
  enabled: false
  container:
    image: docker.io/linuxserver/sabnzbd
    nodeSelector: {}
    port:
      http: 8080
      https: 9090
  service:
    http:
      type: ClusterIP
      port: 8080
      nodePort:
      # Defines an additional LB service, requires cloud provider service or MetalLB
      extraLBService: false
      extraLBAnnotations: {}
    https:
      type: ClusterIP
      port: 9090
      nodePort:
      # Defines an additional LB service, requires cloud provider service or MetalLB
      extraLBService: false
      extraLBAnnotations: {}
  ingress:
    enabled: true
    annotations: {}
    path: /sabnzbd
    tls:
      enabled: false
      secretName: ""
  resources: {}
  volume: {}
   # name: pvc-plex-config
   # storageClassName: longhorn
   # annotations: {}
   # labels: {}
   # accessModes: ReadWriteOnce
   # storage: 5Gi
   # selector: {}

prowlarr:
  enabled: true
  container:
    image: docker.io/linuxserver/prowlarr
    tag: develop
    nodeSelector: {}
    port: 9696
  service:
    type: ClusterIP
    port: 9696
    nodePort:
    extraLBService: false
    extraLBAnnotations: {}
  ingress:
    enabled: true
    annotations: {}
    path: /prowlarr
    tls:
      enabled: false
      secretName: ""
  resources: {}
  volume: {}
   # name: pvc-prowlarr-config
   # storageClassName: longhorn
   # annotations: {}
   # labels: {}
   # accessModes: ReadWriteOnce
   # storage: 5Gi
   # selector: {}

plex:
  enabled: false
  claim: "CHANGEME"
  replicaCount: 1
  container:
    image: docker.io/linuxserver/plex
    nodeSelector: {}
    port: 32400
  service:
    type: ClusterIP
    port: 32400
    nodePort:
    # Defines an additional LB service, requires cloud provider service or MetalLB
    extraLBService: false
  ingress:
    enabled: true
    annotations: {}
    tls:
      enabled: false
      secretName: ""
  resources: {}
  #  limits:
  #    cpu: 100m
  #    memory: 100Mi
  #  requests:
  #    cpu: 100m
  #    memory: 100Mi
  volume: {}
   # name: pvc-plex-config
   # storageClassName: longhorn
   # annotations: {}
   # labels: {}
   # accessModes: ReadWriteOnce
   # storage: 5Gi
   # selector: {}

jellyfin:
  enabled: true
  replicaCount: 1
  container:
    image: docker.io/linuxserver/jellyfin
    nodeSelector: {}
    port: 8096
  service:
    type: ClusterIP
    port: 8096
    nodePort:
    extraLBService: false
    extraLBAnnotations:
        metallb.universe.tf/allow-shared-ip: "mediaserver-ip-key"
  ingress:
    enabled: true
    annotations: {}
    tls:
      enabled: false
      secretName: ""
  resources: {}
  #  limits:
  #    cpu: 100m
  #    memory: 100Mi
  #  requests:
  #    cpu: 100m
  #    memory: 100Mi
  volume: {}
   # name: pvc-jellyfin-config
   # storageClassName: longhorn
   # annotations: {}
   # labels: {}
   # accessModes: ReadWriteOnce
   # storage: 5Gi
   # selector: {}

readarr:
  enabled: true
  container:
    image: lscr.io/linuxserver/readarr
    tag: develop
    nodeSelector: {}
    port: 8787
  service:
    type: ClusterIP
    port: 8787
    nodePort:
    # Defines an additional LB service, requires cloud provider service or MetalLB
    extraLBService: false
    extraLBAnnotations:
        metallb.universe.tf/allow-shared-ip: "mediaserver-ip-key"
  ingress:
    enabled: true
    annotations: {}
    path: /readarr
    tls:
      enabled: false
      secretName: ""
  resources: {}
  volume: {}
  # name: pvc-readarr-config
  # storageClassName: longhorn
  # annotations: {}
  # labels: {}
  # accessModes: ReadWriteOnce
  # storage: 5Gi
  # selector: {}

bazarr:
  enabled: true
  container:
    image: lscr.io/linuxserver/bazarr
    tag: latest
    nodeSelector: {}
    port: 6767
  service:
    type: ClusterIP
    port: 6767
    nodePort:
    # Defines an additional LB service, requires cloud provider service or MetalLB
    extraLBService: true
    extraLBAnnotations:
        metallb.universe.tf/allow-shared-ip: "mediaserver-ip-key"
  ingress:
    enabled: false
    annotations: {}
    path: /bazarr
    tls:
      enabled: false
      secretName: ""
  resources: {}
  volume: {}
  # name: pvc-bazarr-config
  # storageClassName: longhorn
  # annotations: {}
  # labels: {}
  # accessModes: ReadWriteOnce
  # storage: 5Gi
  # selector: {}

jellyseerr:
  enabled: true
  container:
    image: fallenbagel/jellyseerr
    tag: latest
    nodeSelector: {}
    port: 5055
  service:
    type: ClusterIP
    port: 5055
    nodePort:
    # Defines an additional LB service, requires cloud provider service or MetalLB
    extraLBService: false
    extraLBAnnotations:
        metallb.universe.tf/allow-shared-ip: "mediaserver-ip-key"
  ingress:
    enabled: true
    annotations: {}
    path: /jellyseerr
    tls:
      enabled: false
      secretName: ""
  resources: {}
  volume: {}
  # name: pvc-jellyseerr-config
  # storageClassName: longhorn
  # annotations: {}
  # labels: {}
  # accessModes: ReadWriteOnce
  # storage: 5Gi
  # selector: {}  